1. docker install on ubuntu

sudo apt update && sudo apt install apt-transport-https ca-certificates curl software-properties-common -y

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update

sudo apt install docker-ce -y

sudo systemctl status docker

sudo usermod -aG docker $USER && newgrp docker

2. kubectl install on ubuntu

sudo apt update && sudo apt install -y apt-transport-https ca-certificates curl

curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt update

sudo apt install -y kubectl

(or) 

sudo snap install kubectl --classic

3. Install AZ-CLI on ubuntu

sudo apt update

curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose



Steps to deploy the project:

1. Docker image build and push

git clone https://github.com/pasupathi-azure-devops-c2s/social-media-project.git
    
cd client && docker build -t client:latest . && cd .. && cd server && docker build -t server:latest . && cd .. && cd socket && docker build -t socket:latest . && cd ..

docker-compose up --build
    
az login
    
az acr login --name akscr01sample

docker tag client:latest akscr01sample.azurecr.io/client:latest
docker tag socket:latest akscr01sample.azurecr.io/socket:latest
docker tag server:latest akscr01sample.azurecr.io/server:latest

docker push akscr01sample.azurecr.io/client:latest && docker push akscr01sample.azurecr.io/server:latest && docker push akscr01sample.azurecr.io/socket:latest

    


2. Deploy to the aks cluster

az aks get-credentials --resource-group AKS-Cluster-RG --name aks-cluster-pasupathikumar
kubectl apply -f client-deployment.yml --validate=false
kubectl apply -f server-deployment.yml --validate=false
kubectl apply -f socket-deployment.yml --validate=false


docker rmi -f $(docker images -q)

docker system prune -af

sample-edits