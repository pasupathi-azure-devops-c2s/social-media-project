apiVersion: apps/v1
kind: Deployment
metadata:
  name: social-media-client-deployment
  labels:
    app: social-media-client
spec:
  replicas: 3  # Number of client app replicas/pods to run
  selector:
    matchLabels:
      app: social-media-client
  template:
    metadata:
      labels:
        app: social-media-client
    spec:
      containers:
        - name: social-media-client
          image: akscr01sample.azurecr.io/social-media-client:latest  # Replace with your actual ACR image reference
          ports:
            - containerPort: 3000  # Expose port 3000 (or the port your app uses)
          env:
            - name: NODE_ENV
              value: "production"  # Optional: Environment variable to set NODE_ENV
      imagePullSecrets:
        - name: acr-secret  # Ensure this secret exists for ACR authentication (if required)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: social-media-server-deployment
  labels:
    app: social-media-server
spec:
  replicas: 3  # Number of server app replicas/pods to run
  selector:
    matchLabels:
      app: social-media-server
  template:
    metadata:
      labels:
        app: social-media-server
    spec:
      containers:
        - name: social-media-server
          image: akscr01sample.azurecr.io/social-media-server:latest  # Replace with your actual ACR image reference
          ports:
            - containerPort: 5000  # Expose port 5001 (or the port your server uses)
          env:
            - name: NODE_ENV
              value: "production"  # Optional: Environment variable to set NODE_ENV
      imagePullSecrets:
        - name: acr-secret  # Ensure this secret exists for ACR authentication (if required)

---
apiVersion: v1
kind: Service
metadata:
  name: social-media-client-service
spec:
  selector:
    app: social-media-client  # This selector matches the client deployment pods
  ports:
    - protocol: TCP
      port: 3000  # Port exposed by the service
      targetPort: 3000  # Port on the container the service forwards to
  type: LoadBalancer  # Optional: Change to ClusterIP or NodePort if external access is not required

---
apiVersion: v1
kind: Service
metadata:
  name: social-media-server-service
spec:
  selector:
    app: social-media-server  # This selector matches the server deployment pods
  ports:
    - protocol: TCP
      port: 5000  # Port exposed by the service
      targetPort: 5000  # Port on the container the service forwards to
  type: LoadBalancer  # Optional: Change to ClusterIP or NodePort if external access is not required
